"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/its-fine@1.1.1_react@18.2.0";
exports.ids = ["vendor-chunks/its-fine@1.1.1_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/its-fine@1.1.1_react@18.2.0/node_modules/its-fine/dist/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/its-fine@1.1.1_react@18.2.0/node_modules/its-fine/dist/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FiberProvider: () => (/* binding */ FiberProvider),\n/* harmony export */   traverseFiber: () => (/* binding */ traverseFiber),\n/* harmony export */   useContainer: () => (/* binding */ useContainer),\n/* harmony export */   useContextBridge: () => (/* binding */ useContextBridge),\n/* harmony export */   useContextMap: () => (/* binding */ useContextMap),\n/* harmony export */   useFiber: () => (/* binding */ useFiber),\n/* harmony export */   useNearestChild: () => (/* binding */ useNearestChild),\n/* harmony export */   useNearestParent: () => (/* binding */ useNearestParent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.0.4_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nfunction traverseFiber(fiber, ascending, selector) {\n    if (!fiber) return;\n    if (selector(fiber) === true) return fiber;\n    let child = ascending ? fiber.return : fiber.child;\n    while(child){\n        const match = traverseFiber(child, ascending, selector);\n        if (match) return match;\n        child = ascending ? null : child.sibling;\n    }\n}\nfunction wrapContext(context) {\n    try {\n        return Object.defineProperties(context, {\n            _currentRenderer: {\n                get () {\n                    return null;\n                },\n                set () {}\n            },\n            _currentRenderer2: {\n                get () {\n                    return null;\n                },\n                set () {}\n            }\n        });\n    } catch (_) {\n        return context;\n    }\n}\nconst FiberContext = wrapContext(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null));\nclass FiberProvider extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FiberContext.Provider, {\n            value: this._reactInternals\n        }, this.props.children);\n    }\n}\nconst { ReactCurrentOwner, ReactCurrentDispatcher } = react__WEBPACK_IMPORTED_MODULE_0__.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nfunction useFiber() {\n    const root = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FiberContext);\n    if (root === null) throw new Error(\"its-fine: useFiber must be called within a <FiberProvider />!\");\n    const id = react__WEBPACK_IMPORTED_MODULE_0__.useId();\n    const fiber = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        for (const maybeFiber of [\n            ReactCurrentOwner == null ? void 0 : ReactCurrentOwner.current,\n            root,\n            root == null ? void 0 : root.alternate\n        ]){\n            if (!maybeFiber) continue;\n            const fiber2 = traverseFiber(maybeFiber, false, (node)=>{\n                let state = node.memoizedState;\n                while(state){\n                    if (state.memoizedState === id) return true;\n                    state = state.next;\n                }\n            });\n            if (fiber2) return fiber2;\n        }\n    }, [\n        root,\n        id\n    ]);\n    return fiber;\n}\nfunction useContainer() {\n    const fiber = useFiber();\n    const root = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>traverseFiber(fiber, true, (node)=>{\n            var _a;\n            return ((_a = node.stateNode) == null ? void 0 : _a.containerInfo) != null;\n        }), [\n        fiber\n    ]);\n    return root == null ? void 0 : root.stateNode.containerInfo;\n}\nfunction useNearestChild(type) {\n    const fiber = useFiber();\n    const childRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        var _a;\n        childRef.current = (_a = traverseFiber(fiber, false, (node)=>typeof node.type === \"string\" && (type === void 0 || node.type === type))) == null ? void 0 : _a.stateNode;\n    }, [\n        fiber\n    ]);\n    return childRef;\n}\nfunction useNearestParent(type) {\n    const fiber = useFiber();\n    const parentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        var _a;\n        parentRef.current = (_a = traverseFiber(fiber, true, (node)=>typeof node.type === \"string\" && (type === void 0 || node.type === type))) == null ? void 0 : _a.stateNode;\n    }, [\n        fiber\n    ]);\n    return parentRef;\n}\nfunction useContextMap() {\n    var _a, _b;\n    const fiber = useFiber();\n    const [contextMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>/* @__PURE__ */ new Map());\n    contextMap.clear();\n    let node = fiber;\n    while(node){\n        const context = (_a = node.type) == null ? void 0 : _a._context;\n        if (context && context !== FiberContext && !contextMap.has(context)) {\n            contextMap.set(context, (_b = ReactCurrentDispatcher == null ? void 0 : ReactCurrentDispatcher.current) == null ? void 0 : _b.readContext(wrapContext(context)));\n        }\n        node = node.return;\n    }\n    return contextMap;\n}\nfunction useContextBridge() {\n    const contextMap = useContextMap();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>Array.from(contextMap.keys()).reduce((Prev, context)=>(props)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Prev, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Provider, __spreadProps(__spreadValues({}, props), {\n                    value: contextMap.get(context)\n                }))), (props)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FiberProvider, __spreadValues({}, props))), [\n        contextMap\n    ]);\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/its-fine@1.1.1_react@18.2.0/node_modules/its-fine/dist/index.js\n");

/***/ })

};
;